NodeFinder is used to find a node with a given path. If the path to the node contains sub-paths to exo:symlink nodes, find the real link node.

|| *Method* ||*Param*|| *Return* || *Description* ||
| *getNode*(Node ancestorNode, String relativePath) throws PathNotFoundException, RepositoryException; |{{ancestorNode}}: The ancestor of the node to retrieve from which we start.{example}{example} {{relativePath}}: The relative path of the node to retrieve. | {{node}}|  Return the node at relPath related to the ancestor node.|
| *getNode*(Node ancestorNode, String relativePath, boolean giveTarget) throws PathNotFoundException, RepositoryException;|{{ancestorNode}}: The ancestor of the node to retrieve from which we start.{example}{example} {{relativePath}}: The relative path of the node to retrieve. {example}{example} {{giveTarget}}: Indicate if the target must be returned in case the item is a link.  |{{node}} | Return the node at relPath related to the ancestor node. If the node is a link and giveTarget has been set to <code>true</code>, the target node will be returned.  |
| *getItem*(String repository, String workspace, String absPath) throws PathNotFoundException, RepositoryException; |{{repository}}: The repository name.{example}{example} {{workspace}}: The workspace name. {example}{example} {{absPath}}: An absolute path.  | {{item}}| Return the item at the specified absolute path. |
| *getItemSys*(String repository, String workspace, String absPath, boolean system) throws PathNotFoundException, RepositoryException; | {{repository}}: The name of repository{example}{example} {{workspace}}: The workspace name.{example}{example} {{absPath}}: An absolute path.| {{item}}| Return the item at the specified absolute path. |
| *getItem*(String repository, String workspace, String absPath, boolean giveTarget) throws PathNotFoundException, RepositoryException; | {{repository}}: The repository name.{example}{example} {{workspace}}: The workspace name. {example}{example} {{absPath}}: An absolute path. {example}{example} {{giveTarget}}: Indicate if the target must be returned in case the item is a link. | {{item}} | Return the item at the specified absolute path. If the item is a link and giveTarget has been set to <code>true</code>, the target node will be returned.  |
| *getItemGiveTargetSys*(String repository, String workspace, String absPath, boolean giveTarget, boolean system) throws PathNotFoundException, RepositoryException;| {{repository}}: The repository name.{example}{example} {{workspace}}: The workspace name.{example}{example} {{absPath}}: An absolute path.{example}{example} {{giveTarget}}: Indicate if the target must be returned in case the item is a link. {example}{example} {{system}}: The system provider.  |Item |Return the item at the specified absolute path. If the item is a link and {{giveTarget}} has been set to <code>true</code>, the target node will be returned.  |
| *getItem*(Session session, String absPath) throws PathNotFoundException, RepositoryException; |{{session}}:  The session is used to get the item. {example}{example} {{absPath}}: An absolute path.  | {{item}}| Return the item at the specified absolute path.|
| *getItem*(Session session, String absPath, boolean giveTarget) throws PathNotFoundException, RepositoryException; |{{session}}: The session is used to get the item.{example}{example}{{absPath}}: An absolute path.{example}{example}{{giveTarget}}: Indicate if the target must be returned in case the item is a link.| {{item}} | Return the item at the specified absolute path. If the item is a link and {{giveTarget}} has been set to <code>true</code>, the target node will be returned.  |
| *getItemTarget*(Session session, String absPath, boolean giveTarget, boolean system) throws PathNotFoundException, RepositoryException;|{{session}}: The session is used to get the item.{example}{example} {{absPath}}: An absolute path.{example}{example} {{giveTarget}}: Indicate if the target must be returned in case the item is a link. {example}{example} {{system}}: The system provider  | {{item}} |  Return the item at the specified absolute path. If the item is a link and {{giveTarget}} has been set to <code>true</code>, the target node will be returned.|
| *itemExists*(Session session, String absPath) throws RepositoryException; | {{session}}: The session is used to get the item.{example}{example}{{absPath}}: An absolute path. | {{boolean}} |Return <code>true</code> if an item exists at absPath; otherwise returns <code>false</code>.{example}{example}Also returns <code>false</code> if the specified absPath is malformed. |


