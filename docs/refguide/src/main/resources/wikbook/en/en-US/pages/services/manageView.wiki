_ManageViewService_ is used to work with views. This service has many functions which allow you to add, edit, delete, and get views.

||*Method*||*Param* || *Return*||*Description*||
|*addView*(String name, String permissions, String template, List<?> tabs, String repository) throws Exception;| {{name}} {example}{example} {{permissions}} {example}{example} {{template}} {example}{example} {{tabs}} {example}{example} {{repository}}| {{void}}|Insert a new view to the system. (Deprecated) |
|*addView*(String name, String permissions, String template, List<?> tabs) throws Exception;|{{name}} {example}{example} {{permissions}} {example}{example} {{template}} {example}{example} {{tabs}}| {{void}}|Insert a new view to the system.|
|*getViewByName*(String viewName, String repository, SessionProvider provider) throws Exception;| {{viewName}}{example}{example} {{repository}}  {example}{example} {{provider}}| {{node}}| Specify a new view depending on the view name. (Deprecated)|
|*getViewByName*(String viewName, SessionProvider provider) throws Exception;|{{viewName}}{example}{example} {{provider}}| {{node}}| Specify a new view depending on the view name.|
|*getButtons*() throws Exception;| {{N/A}} |{{List<?>}} |Return all strings of buttons. |
|*removeView*(String viewName, String repository) throws Exception;| {{viewName}} {example}{example} {{repository}} | {{void}} |Remove a view from the views list in the system. (Deprecated) |
|*removeView*(String viewName) throws Exception;|  {{viewName}}| {{void}} |Remove a view from the views list in the system.|
|*getAllViews*(String repository) throws Exception;| {{repository}}| {{List<ViewConfig>}} | Return all views of the repository configured in the XML file. (Deprecated)|
|*getAllViews*() throws Exception;| {{N/A}}| {{List<ViewConfig>}} | Return all views of the repository configured in the XML file. |
|*hasView*(String name, String repository) throws Exception;| {{name}}  {example}{example} {{repository}} | {{boolean}} | Return true if the given repository has a view. (Deprecated) |
|*hasView*(String name) throws Exception;| {{N/A}}| {{boolean}} | Return true if the given repository has a view. |
|*getTemplateHome*(String homeAlias, String repository, SessionProvider provider) throws Exception;| {{homeAlias}} {example}{example} {{repository}}  {example}{example} {{provider}}| {{Node}} |Get a template node that has the path. (Deprecate)|
|*getTemplateHome*(String homeAlias, SessionProvider provider) throws Exception;| {{homeAlias}} {example}{example} {{provider}}| {{Node}} |Get a template node that has the path.|
|*getAllTemplates*(String homeAlias, String repository, SessionProvider provider) throws Exception;| {{homeAlias}} {example}{example} {{repository}} {example}{example} {{provider}}| {{List<Node>}} |Get all template nodes that have the path. (Deprecated)|
|*getAllTemplates*(String homeAlias, SessionProvider provider) throws Exception;| {{homeAlias}} {example}{example} {{provider}}| {{List<Node>}} |Get all template nodes that have the path.|
|*getTemplate*(String path, String repository, SessionProvider provider) throws Exception;| {{path}} {example}{example} {{repository}}  {example}{example} {{provider}} | {{Node}} |Return a node that has the path of the repository. (Deprecated) |
|*getTemplate*(String path, SessionProvider provider) throws Exception;| {{path}} {example}{example} {{provider}} | {{Node}} |Return a node that has the path of the repository.|
|*addTemplate*(String name, String content, String homePath, String repository) throws Exception;| {{name}}  {example}{example} {{content}}  {example}{example} {{homePath}}  {example}{example} {{repository}} | {{String}} |Insert a new template to a node by specifying its path. (Deprecated) |
|*addTemplate*(String name, String content, String homePath) throws Exception;| {{name}}  {example}{example} {{content}}  {example}{example} {{homePath}}| {{String}} |Insert a new template to a node by a specified path.|
|*updateTemplate*(String name, String content, String homePath, String repository) throws Exception;|{{name}} {example}{example} {{content}}  {example}{example} {{homePath}}  {example}{example} {{repository}} | {{String}} |Update a template for a node by specifying its path. (Deprecated) |
|*updateTemplate*(String name, String content, String homePath) throws Exception;|{{name}} {example}{example} {{content}}  {example}{example} {{homePath}}| {{String}} |Update a template for a node by specifying its path.|
|*removeTemplate*(String templatePath, String repository) throws Exception;| {{templatePath}}{example}{example} {{repository}} | {{void}} |Remove the template from the given node by specifying its path. (Deprecated) |
|*removeTemplate*(String templatePath) throws Exception;| {{templatePath}} | {{void}} |Remove the template from the given node by specifying its path.|
|*addTab*(Node view, String name, String buttons) throws Exception ;| {{view}} {example}{example}  {{name}} {example}{example}  {{buttons}} | {{void}} |Insert a new tab to the given view node.|
|*init*(String repository) throws Exception ;| {{repository}} | {{void}} |Get all templates that are configured in the XML file of a specified repository. (Deprecated)|
|*init*() throws Exception ;| {{N/A}}| {{void}} | Get all templates that are configured in the XML file of a specified repository.|
