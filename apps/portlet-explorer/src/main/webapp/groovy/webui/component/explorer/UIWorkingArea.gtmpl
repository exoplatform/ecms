<%
	/**
	 * Created by The eXo Platform SARL
	 * Author : Tran The Trong
	 *          trongtt@gmail.com
	 * July 25, 2006
	 * version: $Id$	 
	 */
%>
<%
  import org.exoplatform.ecm.webui.component.explorer.sidebar.UISideBar ;
  import org.exoplatform.ecm.webui.component.explorer.UIDocumentWorkspace ;
  import org.exoplatform.ecm.webui.component.explorer.UISelectDocumentTemplateTitle;
  import org.exoplatform.ecm.webui.component.explorer.control.UIActionBar;
  import org.exoplatform.ecm.webui.component.explorer.UIDrivesArea ;
  import org.exoplatform.webui.core.UIRightClickPopupMenu ;
  import org.exoplatform.ecm.jcr.model.Preference;
  import org.exoplatform.ecm.webui.component.explorer.UIJCRExplorer;
  import org.exoplatform.ecm.webui.utils.Utils;
  import org.exoplatform.ecm.webui.component.admin.manager.UIAbstractManagerComponent;
  import org.apache.commons.lang.StringUtils;
  import org.apache.commons.lang.StringEscapeUtils;

  def rcontext = _ctx.getRequestContext() ;
  def uiTreeExplorer = uicomponent.getTreeExplorer();
  def uiExplorer = uicomponent.getAncestorOfType(UIJCRExplorer.class);
  def pref = uiExplorer.getPreference();
  def enableDragAndDrop = pref.isEnableDragAndDrop();
  def userName = rcontext.getRemoteUser();
  def leftContainerWidth = Utils.getCookieByCookieName(userName + "_leftContainerWidth");
  def savedLeftContainerWidthStyle  = leftContainerWidth!=null?"style=\"width:" + leftContainerWidth + "px\"":"";
  def initWithoutLeftContainer = uicomponent.isShowSideBar();

  String componentId = uicomponent.getId();
  def jsManager = rcontext.getJavascriptManager();
  
  if(uiTreeExplorer != null && uicomponent.isShowSideBar()) {
    def focusNode = uiTreeExplorer.getEncodeCurrentPath();
    def expandNode = uiTreeExplorer.getEncodeExpandPath();
    def isExpand = uiTreeExplorer.getIsExpand();
    
    jsManager.require("SHARED/ecm-utils", "ecmutil").require("SHARED/uiListView", "uiListView").
    addScripts("uiListView.UIListView.initDragDropForTreeEvent('$componentId', '$enableDragAndDrop');");  
	  
	  if(!isExpand && focusNode != null)
	    jsManager.getRequireJS().addScripts("ecmutil.ECMUtils.loadEffectedSideBar('$focusNode');");
	  else if(isExpand && expandNode != null)
	    jsManager.getRequireJS().addScripts("ecmutil.ECMUtils.loadEffectedSideBar('$expandNode');");
  }    

  //WCM Notice
  def nodePathDelete = uicomponent.getNodePathDelete();
  def deleteNotice = uicomponent.getDeleteNotice();
  def wcmNotice = uicomponent.getWCMNotice();
  def undo = StringEscapeUtils.escapeJavaScript(_ctx.appRes('UIWorkingArea.msg.undo-delete'));
  uicomponent.setNodePathDelete("");
  uicomponent.setDeleteNotice("");
  uicomponent.setWCMNotice("");
  jsManager.getRequireJS().addScripts("ecmutil.ECMUtils.setUndo(\"" + undo + "\");");
  if(StringUtils.isNotEmpty(nodePathDelete)) {
 	  List<UIAbstractManagerComponent> managers = uicomponent.getManagers();
 	  for (UIAbstractManagerComponent manager : managers) {
		  if(manager.getName().equals("RestoreFromTrashManageComponent"))
				nodePathDelete = manager.event("RestoreFromTrash", nodePathDelete);			
		}
 	  jsManager.getRequireJS().addScripts("ecmutil.ECMUtils.activateWCMRestoreNotice(\"$wcmNotice\");");
 	  jsManager.getRequireJS().addScripts("ecmutil.ECMUtils.activateWCMDeleteNotice(\"$nodePathDelete\", \""+deleteNotice+"\");");
   } else {	 
	   jsManager.getRequireJS().addScripts("ecmutil.ECMUtils.activateWCMDeleteNotice(\"$nodePathDelete\", \""+deleteNotice+"\");");
	   jsManager.getRequireJS().addScripts("ecmutil.ECMUtils.activateWCMRestoreNotice(\"$wcmNotice\");");
   }  
%>
<div id="wcm-notice" style="display: none;" class="alert alert-success wcmAlertSuccess"></div>
<div class="uiWorkingArea clearfix" id="UIWorkingArea" initWithoutLeftContainer="$initWithoutLeftContainer">
  <%
	  uicomponent.renderChild(UIRightClickPopupMenu.class) ;

	  if( uicomponent.isShowSideBar() ) {
	    println "<div class=\"leftContainer\" id=\"LeftContainer\" $savedLeftContainerWidthStyle >" ;
	  	uicomponent.renderChild(UISideBar.class) ;
	  	println "</div>" ;
	  }

	if( uicomponent.isShowSideBar() ) {
    %>
      <div class="resizeBar" onmousedown="eXo.ecm.ECMUtils.resizeSideBar(event)">
				<div class="resizeBarContent">
					<a class="resizeButton" onmousedown="eXo.ecm.ECMUtils.showHideSideBar(event);"><i class="uiIconArrowLeft"></i></a>
				</div>
      </div>
    <%
    }
	%>
  <div class="rightContainer">
		<% 
		  uicomponent.renderChild(UIActionBar.class) ;
		  uicomponent.renderChild(UISelectDocumentTemplateTitle.class);
		  uicomponent.renderChild(UIDocumentWorkspace.class) ;
		  uicomponent.renderChild(UIDrivesArea.class);
		%>
		
	</div>
	
</div>
<%
  rcontext.getJavascriptManager().require("SHARED/ecm-utils", "ecmutil").addScripts("ecmutil.ECMUtils.checkLeftContainerInPreferences($initWithoutLeftContainer);");
  rcontext.getJavascriptManager().require("SHARED/ecm-utils", "ecmutil").addScripts("ecmutil.ECMUtils.loadEffectedItemsInSideBar();");
%>
