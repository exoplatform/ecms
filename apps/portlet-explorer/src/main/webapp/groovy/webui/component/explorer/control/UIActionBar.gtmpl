<%
	/**
	 * Created by The eXo Platform SARL
	 * Author : Tran The Trong
	 *          trongtt@gmail.com
	 * August 02, 2006
	 * version: $Id$
	 */
%>
<%
  import java.util.List;
  import java.util.ArrayList;
  import org.exoplatform.ecm.webui.component.explorer.UIJCRExplorerPortlet;
  import org.exoplatform.ecm.webui.component.explorer.UIJCRExplorer;
  import org.exoplatform.ecm.webui.component.explorer.UIWorkingArea;
  import org.exoplatform.ecm.webui.component.explorer.UIDrivesArea;
  import org.apache.commons.lang.StringUtils;
  import org.exoplatform.ecm.webui.component.explorer.control.action.UploadActionComponent;
  
  def uiPortlet = uicomponent.getAncestorOfType(UIJCRExplorerPortlet.class);
  def uiExplorer = uicomponent.getAncestorOfType(UIJCRExplorer.class);
  def uiDriveArea = uiExplorer.getChild(UIWorkingArea.class).getChild(UIDrivesArea.class);
  def uniqueId  = new Date().getTime();
  def rcontext = _ctx.getRequestContext() ;
  def uiFormId = uicomponent.id;
  
  def jsManager = rcontext.getJavascriptManager();
  jsManager.require("SHARED/ecm-utils", "ecmutil").require("SHARED/multiUpload", "multiUpload")
  .addScripts('multiUpload.displayCorrectUploadButton();');
  
  def showUploadInput = false;
  
  def tabs = uicomponent.getTabList() ;
  def actionBarStyle = "";
  def displayTabContainer = "";
	List<String> tabAvailableList = new ArrayList<String>();
	for(tab in tabs) {
	  if(uicomponent.isActionAvailable(tab)) {
	    tabAvailableList.add(tab);       
	  }
	}
	if(tabAvailableList.size() < 2) {
    actionBarStyle = "uiActionBarAlone";
    displayTabContainer = "style =\"display: none;\"";
  }
  
  public String getCSSClassOfDrivesButton() {
    def uiExplorer = uicomponent.getAncestorOfType(UIJCRExplorer.class);
    def uiWorkingArea = uiExplorer.getChild(UIWorkingArea.class);
    def uiDriveArea = uiWorkingArea.getChild(UIDrivesArea.class);
    if (uiDriveArea.isRendered()) {
      return "showDrivesButton";  
    } 
    return "noneDrivesButton";
  }
%>

<%if (uiPortlet.isShowActionBar() && !uiExplorer.isAddingDocument()) {%>
<% uiform.begin() %>
<div class="uiActionBar $actionBarStyle" id="$uicomponent.id" style="position: relative;">
  <div class="uiTabNormal uiTabGrayInPage">
    <ul class="nav nav-tabs uiTabsContainer" $displayTabContainer>
			<%
				def isSelected = false;
				def selectedTab = uicomponent.getSelectedTab();
				if(!tabAvailableList.contains(selectedTab) && tabAvailableList.size() > 0) {
					selectedTab = tabAvailableList.get(0);
					uicomponent.setSelectedTab(selectedTab);
				}
				int i = 0;
				for(tab in tabAvailableList) {
					def tabStyle = "";				   
					i++;
					if(tabAvailableList.size() == i) tabStyle = "last ";
					if(selectedTab.equals(tab)) {
						isSelected = true;
						tabStyle += "active ";
					}
					if(StringUtils.isNotEmpty(tabStyle)) tabStyle = "class=\""+tabStyle+"\"";
					String fullTabName = (String)_ctx.appRes(uicomponent.getId() + ".obtion." + tab);
					String displayTabName = fullTabName;
					if (fullTabName.length() > 13) {
						displayTabName = fullTabName.substring(0, 10) + "..."
					}                                                                                                 %>
					<li $tabStyle onclick="<%=uicomponent.event('ChangeTab', tab); %>;">
						<a data-toggle="tab" href="#tab1_4">$displayTabName</a>
					</li>                                                                                           <%
				}/*for tabs loops*/                                                                                   %>
					<li class="dropdown pull-right listHiddenTabsContainer">
						<a data-toggle="dropdown" class="dropdown-toggle" href="#"><%=_ctx.appRes("UIViewBar.label.more")%> <b class="caret"></b></a>
							<ul class="dropdown-menu">
								<!-- <li><a data-toggle="tab" href="#dropdown1_4">Tab demo1</a></li> -->
							</ul>
					</li>
		 </ul>
		 <div id="ActionMenuPlaceHolder" class="ActionMenuPlaceHolder"><span></span></div>
		 <div id="uiActionsBarContainer" class="tab-content">
			 <div id="tab1_4" class="tab-pane fade in active">
				 <ul class="nav nav-pills">
					 <%
						 for(button in uicomponent.getActionInTab(uicomponent.getSelectedTab())) {
							 def action = uicomponent.getUIAction(button);
							 if (action != null) {
								 def actionOnClick = (action instanceof UploadActionComponent) ? "document.getElementById('MultiUploadInputFiles').click();" : action.event(button);
								 def title = _ctx.appRes(uicomponent.getId() + ".tooltip." + button);
								 String idUpload = (action instanceof UploadActionComponent) ? "id='UploadButtonDiv'" : "";
							 %>
								 <li <%=idUpload%> onclick="<%= actionOnClick %>">
									 <a class="actionIcon"><i class="uiIconEcms${button}"></i> $title</a>
								 </li>
								 <% if (action instanceof UploadActionComponent) {
	  						   showUploadInput = true;
	  						 }
								//IE upload box
								 if (action instanceof UploadActionComponent) {
		             %>		              	             
		               <li id="UploadButtonDivIE" onclick="eXo.ecm.MultiUpload.uploadFileForIE(document);">
								     <a class="actionIcon"><i class="uiIconEcms${button}"></i> $title</a>
							     </li>		               
		             <%
		             } 
							 } //if condition
						 } //for loop
					 %>
					 <li class="dropdown pull-right listHiddenActionsContainer" style="display: none;">
						 <a data-toggle="dropdown" class="dropdown-toggle" href="#"><%=_ctx.appRes("UIViewBar.label.more")%> <b class="caret"></b></a>
						 <ul class="dropdown-menu" id="ListHideContainer"></ul>
					 </li>
				 </ul>
			 </div>
  		<div class="uiViewBarContainer clearfix" id="UIViewBarContainer">
  		  <%
  		  if (uicomponent.hasBackButton()) {%>
  		  <a class ="urlBackToButton actionIcon pull-right" href="<%=uicomponent.event("BackTo")%>" rel="tooltip" data-placement="bottom" title="<%=_ctx.appRes("UIViewBar.label.backTo")%>"><i class="uiIconEcmsReturn uiIconEcmsLightGrey"></i></a>
  		  <%}%>  	      
  	    <a class="setupPreferencesButton actionIcon pull-right" href="<%=uicomponent.event("Preferences")%>" rel="tooltip" data-placement="bottom" title="<%=_ctx.appRes("UIViewBar.label.setUpBrowser")%>"><i class="uiIconSetting uiIconLightGray"></i></a>

		   <%if (!uicomponent.isDirectlyDrive()) {
				   def styleDrive = "";
				   def currentDrive = uiExplorer.getDriveData();
				   def groupDrives = uiDriveArea.groupDrives();
				   def personalDrives = uiDriveArea.personalDrives();
				   if (groupDrives.contains(currentDrive)) {
				     styleDrive = "Group";
				   } else if (personalDrives.contains(currentDrive)) {
				     styleDrive = "Personal";
				   } else {
				     styleDrive = currentDrive.getName();
				   }
				   styleDrive = styleDrive.replace(" ","");
			 %>
	  	     <a id="driveAction" class="<%=getCSSClassOfDrivesButton()%> actionIcon pull-right" href="<%=uicomponent.event("ShowDrives")%>" rel="tooltip" data-placement="bottom" title="<%=_ctx.appRes("UIDrivesArea.DrivesArea.ShowDrives")%>"><i class="uiIconEcmsGeneralDrive uiIconEcms16x16Drive${styleDrive}"></i> <%=uicomponent.getDriveLabel();%> <i class="uiIconArrowDown"></i></a>
  	   <%}%>
  		</div>
		</div>
	</div>
</div>
<% uiform.end() %>
<% } else if (uicomponent.hasBackButton()) {%>
  <% uiform.begin() %>
    <div class="uiActionBar" id="$uicomponent.id">
      <div class="uiViewBarContainer clearfix" id="UIViewBarContainer">
        <a class ="urlBackToButton actionIcon pull-right" href="<%=uicomponent.event("BackTo")%>" rel="tooltip" data-placement="bottom" title="<%=_ctx.appRes("UIViewBar.title.backTo")%>"><i class="uiIconSetting uiIconLightGray"></i></a>
      </div>
    </div>
  <% uiform.end() %>
<%}
  jsManager.require("SHARED/ecm-utils", "ecmutil").addScripts('ecmutil.ECMUtils.loadContainerReference();');
  jsManager.require("SHARED/ecm-utils", "ecmutil").addScripts('ecmutil.ECMUtils.tabsContainer_OnResize();');
  jsManager.require("SHARED/ecm-utils", "ecmutil").addScripts('ecmutil.ECMUtils.actionbarContainer_OnResize();');
%>



<div style="height:0px;width:0px;position:absolute;z-index:-1">
  <input  style="height:0px;width:0px" id="MultiUploadInputFiles" type="file" multiple="multiple" onchange="eXo.ecm.MultiUpload.handleFiles(this.files);eXo.ecm.MultiUpload.openMultiUploadBox();"/>
</div>

<div style="height:0px;width:0px;position:absolute;z-index:-1">
<iframe id="iFrameUpload" name="iFrameUpload" class="iFrameUpload" frameborder="0px" border="0px" style="width: 0px; height:0px">
</iframe>
</div>

<div style="height:0px;width:0px;position:absolute;z-index:-1">
<xmp id="iContentUpLoad" style="display:none">
<html style="padding: 0px; margin: 0px;">
  <head>
  <script type="text/javascript">_module = {};
    eXo = document.parentWindow.parent.eXo;
    ecm_bootstrap = document.parentWindow.parent.ecm_bootstrap;
    gj=document.parentWindow.parent.gj;
    require=document.parentWindow.parent.require;
    wcm_utils = document.parentWindow.parent.eXo.ecm.WCMUtils;
  </script>
  <head>
  <body style="margin: 0px; padding: 0px; overflow: hidden;width: 0px; height:0px">

<form style="height:0px;width:0px" enctype="multipart/form-data" method="post" target="iTarget">
<input type="file" name="file" class="file" style="height:0px;width:0px" 
      id="IEUploadInputFile" 
      onchange="eXo.ecm.MultiUpload.handleFileIE(this, document.getElementById('UIMultiUpload'));eXo.ecm.MultiUpload.openMultiUploadBox();"/>
</form>
<iframe name="iTarget" id="iTarget" style="height:0px;width:0px"></iframe>
</body>
</html>
</xmp>

</div>


