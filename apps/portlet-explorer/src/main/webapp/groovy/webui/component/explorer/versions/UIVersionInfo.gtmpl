<%
	/**
 * Created by The eXo Platform SARL
 * Author : lxchiati
 *          lebienthuy@gmail.com
 * Sep 29, 2006
 * 11:57:24 AM
 */

import javax.jcr.Node
import java.util.Locale;
    import java.text.DateFormat;
    import org.apache.commons.lang.StringUtils;
    import org.apache.commons.lang.StringEscapeUtils;
    import org.exoplatform.portal.webui.util.Util;
    import org.exoplatform.social.core.identity.model.Identity;
    import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
    import org.exoplatform.social.core.service.LinkProvider;
    import org.exoplatform.social.webui.Utils;
    import org.exoplatform.services.jcr.core.ManageableRepository;

    public String getAvatarURL(String userName) {
        String profileAvatar = null;
        Identity identity = Utils.getIdentityManager().getOrCreateIdentity(OrganizationIdentityProvider.NAME,userName, true);
        if(identity != null && identity.getProfile() != null) {
          profileAvatar = identity.getProfile().getAvatarUrl();
          if (profileAvatar == null || profileAvatar.isEmpty()) {
              profileAvatar = LinkProvider.PROFILE_DEFAULT_AVATAR_URL;
          }
        }
        return profileAvatar;
    }
    public String getProfileURL(String userName) {
        String profileUrl = null;
        Identity identity = Utils.getIdentityManager().getOrCreateIdentity(OrganizationIdentityProvider.NAME,userName, true);
        if(identity != null && identity.getProfile() != null) {
          profileUrl = identity.getProfile().getUrl();
		  if(profileUrl == null) {
			profileUrl = "profile/" + userName;
		  }
        }
        return profileUrl;
    }

    public String getProfileFullName(String userName) {
        String profileFullName = null;
        Identity identity = Utils.getIdentityManager().getOrCreateIdentity(OrganizationIdentityProvider.NAME,userName, true);
        if(identity != null && identity.getProfile() != null) {
          profileFullName = identity.getProfile().getFullName();
        }
        return StringEscapeUtils.escapeHtml(profileFullName);
    }

  public void writeNodes() {
  	def context = _ctx.getRequestContext();
  	def jsManager = context.getJavascriptManager();

    def actionCompareLink = StringUtils.getNestedString(uicomponent.event("CompareVersion"),"javascript:ajaxGet(\'","\')");
    jsManager.require("SHARED/UIVersionInfo", "uiVersionInfo").addScripts("uiVersionInfo.init(\""+uicomponent.id+"\");")
           .addScripts("uiVersionInfo.compareEventUrl(\""+actionCompareLink+"\");");
    Locale currentLocale = Util.getPortalRequestContext().getLocale();
    DateFormat df = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.SHORT, currentLocale);
    println "<a class=\"hidden-phone\" id=\"CompareVersion\" class=\"btn btn-primary disabled\" disabled>"+_ctx.appRes("UIVersionInfo.action.compare-versions")+"</a>" ;
    /* Prepare common parameters for Document Preview */
    javax.jcr.Node currentNode = uicomponent.getCurrentNode();
    def fileType = org.exoplatform.services.cms.impl.Utils.getFileType(currentNode);
    def preferenceWS  = currentNode.getSession().getWorkspace().getName();
    def repository = ((ManageableRepository)currentNode.getSession().getRepository()).getConfiguration().getName();
    def docPreviewTitle = uicomponent.getTitle(currentNode);
    for(node in uicomponent.getListRecords()) {
      boolean isBaseVersion = uicomponent.isBaseVersion(node);

      String versionNumber = uicomponent.isRootVersion(node) ? uicomponent.getRootVersionNum() : node.getName();
      String displayNumber = "";
      if (node.getDisplayName().equals("0")) {
        displayNumber = _ctx.appRes("UIVersionInfo.tooltip.original");
      }else {
        displayNumber = node.getDisplayName();
      }
      String emptySummary = _ctx.appRes("UIVersionInfo.summary.empty");
      String versionId = "version_"+versionNumber;
      String baseVersion = "";
      if (isBaseVersion) {
        baseVersion = " (" + _ctx.appRes("UIVersionInfo.tooltip.baseVersion") + ")";
      }
      String authorUserName = uicomponent.isRootVersion(node) ? uicomponent.getRootOwner() : node.getAuthor();
      String authorFullName = getProfileFullName(authorUserName);
      String avatarURL = getAvatarURL(authorUserName);
      String profileURL = getProfileURL(authorUserName);
      String versionSummary = "";
	  def versionLabels = uicomponent.getVersionLabels(node);
      if (versionLabels != null && versionLabels.length > 0) {
        versionSummary = versionLabels[0];
        if(versionSummary.lastIndexOf("_") != -1) {
          versionSummary = versionSummary.substring(0, versionSummary.lastIndexOf("_"));
        }
		if (versionSummary != null && versionSummary != "") {
		  if(versionSummary.contains("UIDiff.label.restoredFrom")) {
			if(versionSummary.lastIndexOf("_") != -1) {
			  versionSummary = versionSummary.replace("UIDiff.label.restoredFrom", "");
			  def oldVersionNum = versionSummary.substring(versionSummary.lastIndexOf("_") + 1, versionSummary.length());
			  versionSummary = _ctx.appRes("UIDiff.label.restoredFrom").replace("{0}", oldVersionNum);
			} else {
			  versionSummary = versionSummary.replace("UIDiff.label.restoredFrom", _ctx.appRes("UIDiff.label.restoredFrom").replace("{0}", ""));
			}
		  }
		} else {
			versionSummary = '';
		}
      }
    %>
    <tr>
      <td class="hidden-phone">
      <input type="checkbox" id="$versionId" name="$versionId" class="uiCheckbox"/>
      </td>
      <td >
        <label>
            $displayNumber $baseVersion
        </label>
      </td>
      <td><%=df.format(node.getCreatedTime().getTime())%></td>
      <td class="hidden-phone"><a class="userAvatarLink" href="$profileURL"><img class="avatarSmall" src="<%=avatarURL%>"/>  <%=authorFullName%></a></td>
      <td class="hidden-phone"><a id="versionSummary<%=versionNumber%>" class="versionSummary" href="#">$versionSummary</a></td>
      <td class="center">
        <div class="btn-toolbar">
            <div class="btn-group">
                <%
                    javax.jcr.Node currentVersionNode = currentNode;
                    if(node.hasNode(org.exoplatform.ecm.webui.utils.Utils.JCR_FROZEN)) {
                        currentVersionNode = node.getNode(org.exoplatform.ecm.webui.utils.Utils.JCR_FROZEN);
                    }
                    def docDownloadUrl = org.exoplatform.wcm.webui.Utils.getDownloadLink(currentVersionNode);
                    def docOpenUri = uicomponent.getLinkInDocumentsApp(currentNode.getPath());
                    def isWebContent = uicomponent.isWebContent();
                    def docPreviewUri = "javascript:require(['SHARED/documentPreview'], function(documentPreview) {documentPreview.init({doc: {id:'" + currentVersionNode.getUUID() + "', fileType: '" + fileType +"', repository:'" + repository + "', workspace:'" + preferenceWS + "', path:'" + currentNode.getPath() + "', title:'" + docPreviewTitle.replace("'", "\\'") + "', downloadUrl:'" + docDownloadUrl + "', openUrl:'" + docOpenUri + "', isWebContent: " + isWebContent + "}, version: {number:'" + displayNumber + "'}, author: {username:'" + authorUserName + "', fullname:'" + authorFullName + "', avatarUrl:'" + avatarURL + "', profileUrl:'" + profileURL + "'}})})";
                %>
                <a class="btn" onclick="<%=docPreviewUri %>" rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes('UIVersionInfo.tooltip.viewVersion'); %>"><i class="uiIconWatch uiIconLightGray"></i></a>
                <%
                    if(!isBaseVersion) {
                %>
                    <a class="btn" onclick="<%=uicomponent.event('RestoreVersion', node.getPath()); %>" rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes('UIVersionInfo.tooltip.restoreVersion'); %>"><i class="uiIconRestore uiIconLightGray"></i></a>
                    <a class="btn" onclick="<%=uicomponent.event('DeleteVersion', node.getPath()); %>" rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes('UIVersionInfo.tooltip.deleteVersion'); %>"><i class="uiIconTrash uiIconLightGray"></i></a>
                <%  } %>
             </div>
            </div>
      </td>
    </tr>
    <%
    def actionUrl = StringUtils.getNestedString(uicomponent.event('AddSummary', node.getPath()),"javascript:ajaxGet(\'","\')");
    if (uicomponent.hasPermission(currentVersionNode))
      jsManager.require("SHARED/jquery", "gj").require("SHARED/UIVersionInfo", "uiVersionInfo").require("SHARED/X-editable", "xeditable").addScripts("gj(\"#versionSummary"+versionNumber+"\").editable({ mode: \"inline\", url: eXo.ecm.UIVersionInfo.sendVersionSummary, params : {path:\""+ node.getPath() +"\" , actionUrl:\""+ actionUrl +"\"}, pk:\""+versionNumber+"\" ,type: \"text\" ,emptytext: \""+emptySummary+"\" });");
    else
      jsManager.require("SHARED/jquery", "gj").require("SHARED/UIVersionInfo", "uiVersionInfo").require("SHARED/X-editable", "xeditable").addScripts("gj(\"#versionSummary"+versionNumber+"\").editable({ mode: \"inline\", url: eXo.ecm.UIVersionInfo.sendVersionSummary, params : {path:\""+ node.getPath() +"\" , actionUrl:\""+ actionUrl +"\"}, pk:\""+versionNumber+"\" ,type: \"text\" ,disabled: \"true\" ,emptytext: \""+emptySummary+"\" });");
    }
  }
%>

<div class="uiVersionInfo resizable" id="$uicomponent.id">
  <div class="uiBox noRounded">
    <table class="uiFormGrid uiGrid table table-hover table-striped">
      <thead >
        <tr>
          <th class="hidden-phone">#</th>
          <th ><%= _ctx.appRes("UIVersionInfo.labels.version"); %></th>
          <th ><%= _ctx.appRes("UIVersionInfo.labels.date"); %></th>
          <th class="hidden-phone"><%= _ctx.appRes("UIVersionInfo.labels.author"); %></th>
          <th class="hidden-phone"><%= _ctx.appRes("UIVersionInfo.labels.summary"); %></th>
          <th class="center"><%= _ctx.appRes("UIVersionInfo.labels.action"); %></th>
        </tr>
      </thead>
      <tbody>
      <% if (uicomponent.getUIPageIterator().getAvailable() < 1) { %>
          <tr>
      	    <td class="center empty" colspan="6">
              <%=_ctx.appRes("UIGrid.msg.empty")%>
            </td>
          </tr>
        <% } else {
            writeNodes();
          }
        %>
      </tbody>
    </table>
	</div>

	<%
		uicomponent.renderChildren();
	%>
		<% if(uicomponent.getUIPageIterator().getAvailablePage() > 1) { %>
		<div>
			<%_ctx.renderUIComponent(uicomponent.getUIPageIterator())%>
		</div>
		<% } %>
</div>
<div class="uiAction">
	<button type="button" onclick="<%=uicomponent.event("Close")%>" class="btn" href="javascript:void(0);"><%=_ctx.appRes("UIVersionInfo.action.close")%></button>
</div>
