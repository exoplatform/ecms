<%
  	import org.exoplatform.wcm.webui.scv.UISingleContentViewerPortlet;
  	import org.exoplatform.wcm.webui.Utils;
  	import java.util.Locale;
  	import org.exoplatform.wcm.webui.dialog.UIContentDialogForm;
  	import org.exoplatform.ecm.utils.lock.LockUtil;
  	import org.exoplatform.services.jcr.core.ManageableRepository;
  	import org.exoplatform.wcm.webui.administration.UIEditingForm;
  	import org.exoplatform.portal.application.PortalRequestContext;
  	import org.exoplatform.portal.webui.util.Util;
  	import org.exoplatform.webui.application.WebuiRequestContext;
		import org.exoplatform.services.wcm.publication.PublicationDefaultStates;
		def rcontext = _ctx.getRequestContext();
    def jsManager = rcontext.getJavascriptManager();
    jsManager.loadScriptResource("quick-edit");
    jsManager.require("SHARED/jquery", "gj").addScripts("gj(document).ready(function() { gj(\"*[rel='tooltip']\").tooltip();});");
    
    def draftMsg = _ctx.appRes("PublicationStates.draft");
    def publishedMsg = _ctx.appRes("PublicationStates.published");
    
    String portletId = Utils.getRealPortletId(rcontext);
		def quickEditingBlockId = portletId + "-QuickEditingBlock";
		def hoverClass = Utils.isShowQuickEdit() ? " containerHoverClass" : "";
		def node = uicomponent.getNodeView();
		def currentState = uicomponent.getCurrentState();
    def currentStateClass = currentState+"Text";
		def repo = "";
	  def workspace = "";
	  def uuid = "";
	  def propertyName = "exo:title";
	  def siteName = org.exoplatform.portal.webui.util.Util.getPortalRequestContext().getPortalOwner();
	  Locale locale = WebuiRequestContext.getCurrentInstance().getLocale();
    def language = locale.getLanguage();
	    
		if (node != null) {
			
			repo = ((ManageableRepository)node.getSession().getRepository()).getConfiguration().getName();
		  workspace = node.getSession().getWorkspace().getName();
		  uuid = node.getUUID();
		    
			def isShowOptionBar = uicomponent.isShowOptionBar(); 
			def isShowTitle = uicomponent.isShowTitle();
			def isShowDate  = uicomponent.isShowDate();
			boolean isShowInfoBar = uicomponent.isShowInfoBar();
			
			if (isShowTitle && (!uicomponent.isViewMode())) {
        def multiLangMsg = uicomponent.getInlineEditingMsg();
        jsManager.require("SHARED/quick-edit", "quickEdit").
        addScripts("quickEdit.InlineEditor.loadLanguage(" + multiLangMsg + ");");
      }			
			def edittingStyle = "z-index: 5";
			if (isShowInfoBar)
				edittingStyle = "z-index: 5; top:20px";
			%>			
			
			<div class="UIPresentationContainer" id="$uicomponent.id">
			
			<%		
			
			  jsManager.require("SHARED/wcm-utils", "wcmutil");      
		    jsManager.require("SHARED/jquery", "gj").addScripts("gj('#"+uicomponent.id+"').mouseenter( function() {eXo.ecm.WCMUtils.changeStyleClass('$uicomponent.id','UIPresentationContainer $hoverClass');});").
		    addScripts("gj('#"+uicomponent.id+"').mouseleave( function() {eXo.ecm.WCMUtils.changeStyleClass('$uicomponent.id','UIPresentationContainer');});").
		    addScripts("wcmutil.WCMUtils.setZIndex(10);");
        
			  if (Utils.isShowQuickEdit() && !LockUtil.isLocked(node)) {	%>	
				 <div class="edittingToolBarContainer" style="$edittingStyle">
					 <div class="edittingToolBar clearfix">
						<div class="edittingCurrentState pull-left">
              <span class="$currentStateClass"><%if(PublicationDefaultStates.PUBLISHED.equals(currentState)){%><i class="uiIconTick"></i><%}%> <%=_ctx.appRes("PublicationStates."+currentState)%></span>
						</div>
						<div class="btn-group pull-right">
								<a class="btn" onclick = "eXo.ecm.CLV.addURL(this)" href="<%= uicomponent.getQuickEditLink(node) %>" rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes("UIPresentationContainer.title.QuickEdit")%>">
									<i class="uiIconEdit uiIconLightGray"></i>
								</a>           

								<%
									if (org.exoplatform.wcm.webui.utils.Utils.isShowFastPublish(node)) {
								%>

								<a class="btn" href="<%= uicomponent.event("FastPublish")%>" rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes("UIPresentationContainer.title.FastPublish")%>">
									<i class="uiIconEcmsPublish"></i>
								</a>

								<%}							
							  if((!Utils.isPortalEditMode()) && rcontext.getRemoteUser() && Utils.hasEditPermissionOnPage()) {
								%>
								<a class="btn" href="<%= uicomponent.event("Preferences")%>" rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes("UISCVPreferences.label.Preferences")%>">
									<i class="uiIconSetting"></i>
								</a>
								<%}%>
						</div>
					</div>
				</div>
				<%} else {%>
								
				<div class="edittingToolBarContainer" style="$edittingStyle">
				 <div class="edittingToolBar">
						<div class="btn-group">
							<%								
							if((!Utils.isPortalEditMode()) && rcontext.getRemoteUser() && Utils.hasEditPermissionOnPage()) {
								%>
								<a class="btn" href="<%= uicomponent.event("Preferences")%>">
									<i rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes("UISCVPreferences.label.Preferences")%>" class="uiIconSetting"></i>
								</a>         
								<%}%>
								<a class="btn">
									<i rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes("UISCVPreferences.label.LockStatus")%>" class="uiIconEcmsLock"></i>
								</a>
						</div>

				</div>
			</div>
			
			<%
				}
			if (isShowTitle||isShowDate) {
				%>
					  <% if (isShowTitle) {
  					  if (uicomponent.isViewMode() ){
                %><h4 class="title"><%= uicomponent.getTitle(node) %></h4><%
  					  }else {
  					   def orgNode =uicomponent.getOriginalNode();    					  
  					   %><h4 class="title WCMInlineEditable" contenteditable="true" propertyName="<%=propertyName%>" repo="<%=repo%>" workspace="<%=workspace%>" uuid="<%=uuid%>" siteName="<%=siteName%>" publishedmsg="<%=publishedMsg%>" draftmsg="<%=draftMsg%>" fastpublishlink="<%=uicomponent.event('FastPublish')%>" language="<%=language%>" ><%= uicomponent.getTitle(node) %></h4><%             
              }
            } %>
						<% if (isShowDate) { %>
						<div class="dateAndMail"><%= uicomponent.getCreatedDate(node) %></div>
						<% } %>
				<%
			}
			PortalRequestContext portalRequestContext = Util.getPortalRequestContext();
      String urlSearch = portalRequestContext.getRequestParameter("urlSearch");
      
			if (!Utils.isPortalEditMode() && isShowOptionBar && !uicomponent.isPrinting()) { 
				%>
				<div class="uiOptionBar clearfix">
        <% if (urlSearch != null) { %>  
           <a  href="$urlSearch" class="actionIcon" title="<%= _ctx.appRes("UISCVPreferences.label.Back") %>" ><i class="uiIconEcmsReturn uiIconLightGray"></i></a>
        <% } else {%>
             <a class="actionIcon" title="<%= _ctx.appRes("UISCVPreferences.label.Back") %>" onclick="history.go(-1)" ><i class="uiIconEcmsReturn uiIconLightGray"></i></a>
        <% } %>
            <a class="pull-right" href="javascript: void(0);" onclick="window.open('<%= uicomponent.getPrintUrl(node) %>')" title="<%= _ctx.appRes("UIPresentationContainer.label.print");%>"><i class="uiIconPrint uiIconLightGray"></i>  <%= _ctx.appRes("UIPresentationContainer.label.print") %></a>
        </div>
				<% 
			} 
			uicomponent.renderChildren();
			if(uicomponent.isPrinting()) {
        %>
          <div class="ActionContainer" style="padding-bottom:40px">
            <a class="PrintFrameIcon PrintIcon" href="javascript: void(0)" onclick="window.print();"><%= _ctx.appRes("UISCVPreferences.action.Print") %></a>
            <a class="PrintFrameIcon CloseIcon" id="CloseIcon" href="javascript: void(0)" onclick="window.close();"><%= _ctx.appRes("UISCVPreferences.action.Close") %></a>
          </div>
        <%
      } 
			%></div><%

		} else {
		  
		  if((!Utils.isPortalEditMode()) && rcontext.getRemoteUser() && Utils.hasEditPermissionOnPage() && Utils.isShowQuickEdit()) {
				%>
	      <div class="UIPresentationContainer" id="$uicomponent.id" 
	      	onmouseover="this.className = 'UIPresentationContainer $hoverClass'" onmouseout="this.className = 'UIPresentationContainer' "
	      	onfocus="this.className = 'UIPresentationContainer $hoverClass'" onblur="this.className = 'UIPresentationContainer' ">
  				<div class="edittingToolBarContainer" style=" z-index: 5">
						<div class="edittingToolBar" >
							<div class="btn-group">
								<a class="btn" href="<%= uicomponent.event("Preferences")%>">
									<i rel="tooltip" data-placement="bottom" title="<%= _ctx.appRes("UISCVPreferences.label.Preferences")%>" class="uiIconSetting"></i>
								</a>         
							</div>            
						</div>
					</div>
					<div class="SCVNoContent">
						<span><%= _ctx.appRes("UIPresentationContainer.msg.no-content") %></span>
					</div>
			  </div>			
		<%
		}
	}
if (uicomponent.isPrinting()) {
  %>
   <script type="text/javascript">
  var allElements = document.getElementsByTagName('*');
  for (i in allElements) {
   if (allElements[i].nodeName == 'HTML') continue;   
   if (allElements[i].style) allElements[i].style.overflow = 'visible';
   allElements[i].overflow = 'visible';
  }
  var pdfViewer = document.getElementById("pdf_viewer_image");
  if (pdfViewer != null) pdfViewer.style.height="";
   </script>
 <style type="text/css">
  @media print{
   a{ display:none; }
   overflow{ display:none;}
  }
 </style>
  <%
}
%>
