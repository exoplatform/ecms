<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    Copyright (C) 2013 eXo Platform SAS.
    
    This is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 2.1 of
    the License, or (at your option) any later version.
    
    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public
    License along with this software; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd"
  xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">

  <component>
    <key>org.exoplatform.container.PropertyConfigurator</key>
    <type>org.exoplatform.container.PropertyConfigurator</type>
    <init-params>
      <value-param>
        <name>properties.url</name>
        <value>jar:/conf/exo-clouddrive.properties</value>
      </value-param>
    </init-params>
  </component>
  
  <component>
    <key>TestCloudDrivePropertyConfigurator</key>
    <type>org.exoplatform.container.PropertyConfigurator</type>
    <init-params>
      <properties-param>
        <name>properties</name>
        <property name="gatein.jcr.index.changefilterclass" value="org.exoplatform.services.jcr.impl.core.query.DefaultChangesFilter"/>
      </properties-param>
    </init-params>
  </component>
  
  <!-- Cloud Drive components -->

  <component>
    <key>org.exoplatform.services.cms.clouddrives.CloudDriveService</key>
    <type>org.exoplatform.services.cms.clouddrives.CloudDriveServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.services.cms.clouddrives.jcr.NodeFinder</key>
    <type>org.exoplatform.services.cms.clouddrives.jcr.JCRNodeFinder</type>
  </component>

  <component>
    <type>org.exoplatform.services.cms.clouddrives.utils.ExtendedMimeTypeResolver</type>
  </component>

  <component>
    <key>org.exoplatform.services.cms.clouddrives.CloudDriveFeatures</key>
    <type>org.exoplatform.services.cms.clouddrives.features.PermissiveFeatures</type>
  </component>

  <component>
    <key>org.exoplatform.services.cms.clouddrives.exodrive.service.ExoDriveService</key>
    <type>org.exoplatform.services.cms.clouddrives.exodrive.service.ExoDriveService</type>
    <init-params>
      <properties-param>
        <name>storage-configuration</name>
        <property name="root-dir" value="${exo.shared.dir}/filedrive" />
        <property name="base-url" value="file:///${exo.shared.dir}/filedrive" />
        <!-- property name="base-url" value="${filedrive.rest.url}" / -->
      </properties-param>
    </init-params>
  </component>
  
  <component>
    <type>org.exoplatform.commons.persistence.impl.EntityManagerService</type>
  </component>
  
  <!-- For eXo Platform stack -->
  <component>
    <key>org.exoplatform.services.naming.InitialContextInitializer</key>
    <type>org.exoplatform.services.naming.InitialContextInitializer</type>
    <init-params>
      <properties-param>
        <name>default-properties</name>
        <description>Default initial context properties</description>
        <property name="java.naming.factory.initial" value="org.exoplatform.services.naming.SimpleContextFactory" />
      </properties-param>
    </init-params>
  </component>

  <!-- component>
    <key>org.exoplatform.services.cache.CacheService</key>
    <jmx-name>cache:type=CacheService</jmx-name>
    <type>org.exoplatform.services.cache.impl.CacheServiceImpl</type>
    <init-params>
      <object-param>
        <name>cache.config.default</name>
        <object type="org.exoplatform.services.cache.ExoCacheConfig">
          <field name="name">
            <string>default</string>
          </field>
          <field name="maxSize">
            <int>30000</int>
          </field>
          <field name="liveTime">
            <long>60000</long>
          </field>
          <field name="distributed">
            <boolean>false</boolean>
          </field>
          <field name="implementation">
            <string>org.exoplatform.services.cache.concurrent.ConcurrentFIFOExoCache</string>
          </field>
        </object>
      </object-param>
    </init-params>
  </component -->

  <component>
    <key>org.infinispan.transaction.lookup.TransactionManagerLookup</key>
    <type>org.exoplatform.services.transaction.infinispan.JBossStandaloneJTAManagerLookup</type>
  </component>
  
  <external-component-plugins>
    <target-component>org.exoplatform.services.jcr.impl.ext.action.SessionActionCatalog</target-component>
    <component-plugin>
      <name>addActions</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.jcr.impl.ext.action.AddActionsPlugin</type>
      <description>add actions plugin</description>
      <init-params>
        <object-param>
          <name>actions</name>
          <object type="org.exoplatform.services.jcr.impl.ext.action.AddActionsPlugin$ActionsConfig">
            <field name="actions">
              <collection type="java.util.ArrayList">
                <value>
                  <object type="org.exoplatform.services.jcr.impl.ext.action.ActionConfiguration">
                    <field name="eventTypes">
                      <string>removeNode</string>
                    </field>
                    <field name="nodeTypes">
                      <string>ecd:cloudFile</string>
                    </field>
                    <field name="isDeep">
                      <boolean>true</boolean>
                    </field>
                    <field name="actionClassName">
                      <string>org.exoplatform.services.cms.clouddrives.jcr.RemoveCloudFileAction</string>
                    </field>
                  </object>
                </value>
              </collection>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <!-- Use this plugin in external configuration, e.g. an extension -->
  <external-component-plugins> <!-- profiles="default,cloud" -->
    <target-component>org.exoplatform.services.cms.clouddrives.CloudDriveService</target-component>
    <!-- component-plugin>
      <name>add.clouddriveprovider</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.cms.clouddrives.gdrive.GoogleDriveConnector</type>
      <init-params>
        <properties-param>
          <name>drive-configuration</name>
          <property name="provider-id" value="gdrive"/>
          <property name="provider-name" value="Google Drive"/>
        </properties-param>
      </init-params>
    </component-plugin -->
    <component-plugin>
      <name>add.clouddriveprovider</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.cms.clouddrives.exodrive.ExoDriveConnector</type>
      <init-params>
        <properties-param>
          <name>drive-configuration</name>
          <property name="provider-id" value="exo" />
          <property name="provider-name" value="eXo Test Drive" />
        </properties-param>
      </init-params>
    </component-plugin>
    <!-- component-plugin>
      <name>add.clouddriveprovider</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.cms.clouddrives.box.BoxConnector</type>
      <init-params>
        <properties-param>
          <name>drive-configuration</name>
          <property name="provider-id" value="box"/>
          <property name="provider-name" value="Box"/>
          <property name="provider-client-id" value="${clouddrive.box.client.id}"/>
          <property name="provider-client-secret" value="${clouddrive.box.client.secret}"/>
          <property name="connector-host" value="${clouddrive.service.host}"/>
        </properties-param>
      </init-params>
    </component-plugin -->
  </external-component-plugins>
  
  <external-component-plugins>
    <target-component>org.exoplatform.services.naming.InitialContextInitializer</target-component>
    <component-plugin>
      <name>bind.datasource</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.naming.BindReferencePlugin</type>
      <init-params>
        <value-param>
          <name>bind-name</name>
          <value>java:/comp/env/exo-jpa_portal</value>
        </value-param>
        <value-param>
          <name>class-name</name>
          <value>javax.sql.DataSource</value>
        </value-param>
        <value-param>
          <name>factory</name>
          <value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
        </value-param>
        <properties-param>
          <name>ref-addresses</name>
          <description>ref-addresses</description>
          <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
          <property name="url"
            value="jdbc:hsqldb:file:${gatein.data.dir}/hsqldb/${exo.test.type:test}/jpa_portal" />
          <property name="username" value="sa" />
          <property name="password" value="" />
        </properties-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <import>jar:/conf/portal/test-jcr-configuration.xml</import>
  <import>jar:/conf/portal/test-organization-configuration.xml</import>
  
  <!-- remove-configuration>org.exoplatform.commons.api.persistence.DataInitializer</remove-configuration -->
  <remove-configuration>org.exoplatform.wcm.ext.component.document.service.ContentViewerRESTService</remove-configuration>
  <remove-configuration>org.exoplatform.wiki.service.impl.SessionManager</remove-configuration>
  <remove-configuration>org.exoplatform.wiki.mow.core.api.MOWService</remove-configuration>
  <remove-configuration>org.exoplatform.wiki.service.WikiService</remove-configuration>
  <remove-configuration>org.exoplatform.wiki.service.WikiRestService</remove-configuration>
  <remove-configuration>org.exoplatform.wiki.rendering.render.xwiki.image.BaseImageWriterImpl</remove-configuration>
  <remove-configuration>org.exoplatform.wiki.service.DataStorage</remove-configuration>
  <remove-configuration>org.exoplatform.wiki.service.image.ResizeImageService</remove-configuration>
  <remove-configuration>org.exoplatform.wiki.resolver.PageResolver</remove-configuration>
  
</configuration>