<%
  /**
   * Created by The eXo Platform SARL
   * Author : Nguyen Anh Vu
   *          vuna@exoplatform.com
   * Jan 04, 2013
   * 8:16:23 AM
   */
%>
<%
  import org.exoplatform.ecm.webui.utils.Utils ;
  import org.exoplatform.web.application.Parameter ;
  import org.exoplatform.webui.core.UIRightClickPopupMenu ;
  import org.exoplatform.ecm.webui.component.explorer.UIWorkingArea;
  import org.exoplatform.ecm.webui.component.explorer.UIDocumentNodeList;
  import org.exoplatform.services.cms.link.LinkManager;
  import org.exoplatform.ecm.webui.component.explorer.UIJCRExplorer;
  import org.exoplatform.ecm.webui.component.explorer.sidebar.UITreeExplorer;
  import org.exoplatform.services.wcm.utils.WCMCoreUtils;
  import org.apache.commons.lang.StringUtils;
  import org.exoplatform.services.cms.link.NodeFinder;
  
  def linkManager = WCMCoreUtils.getService(LinkManager.class);
  def nodeFinder = WCMCoreUtils.getService(NodeFinder.class);
  def uiWorkingArea = uicomponent.getAncestorOfType(UIWorkingArea.class);
  def uiExplorer = uicomponent.getAncestorOfType(UIJCRExplorer.class);
  def pref = uiExplorer.getPreference();
  def enableDragAndDrop = pref.isEnableDragAndDrop();
  def uiCustomActionComponent = uiWorkingArea.getCustomAction();
  def managersMultiItemContext =  uiWorkingArea.getMultiActionsExtensionList();
  def managersGroundContext = uiWorkingArea.getGroundActionsExtensionList();
  def action = "";
  def permLinkComponent = null;
  UIRightClickPopupMenu contextMenu = uicomponent.getContextMenu() ;
  String componentId = uicomponent.getId();
  java.text.DateFormat dateFormat = uicomponent.getSimpleDateFormat();
  def viewComponentId  = new Date().getTime();
  def rcontext = _ctx.getRequestContext() ;
  def size = uicomponent.getChildrenList().size();
  def jsManager = rcontext.getJavascriptManager();
  jsManager.require("SHARED/ecm-utils", "ecmutil").
            require("SHARED/uiListView", "uiListView").
            require("SHARED/uiFileView", "uiFileView").
            require("SHARED/multiUpload", "multiUpload").
  addScripts('uiFileView.UIFileView.clearCheckboxes();').
  addScripts("uiFileView.UIFileView.initStickBreadcrumb();").
  addScripts('uiFileView.UIFileView.clearOpenDivs();');
  
  
	//Config to display columns with format: ["${column};${width}"]
	//Default 
	String[] arrColumns = ["exo:owner;95px","exo:dateModified;123px","exo:dateCreated;121px"];
	def absNodePath = uiExplorer.getCurrentPath();
	def relNodePath = uiExplorer.filterPath(absNodePath);
	def drivePath = absNodePath;
	if ("/".equals(relNodePath)) {
	  drivePath = absNodePath;
	} else {
	  drivePath = new StringBuffer(absNodePath.substring(0, absNodePath.lastIndexOf(relNodePath)));
	}
	if (StringUtils.isEmpty(drivePath.toString())) {
	  drivePath.append("/");
	}
%>
<div id="$componentId">
	<div id="${componentId}-$viewComponentId" class="uiFileView $componentId">	
		<div class="uiListGrid" style="min-height:400px">
				<div class="titleTable clearfix" id="FileViewBreadcrumb">

    <!--============SecondRow=================================================================-->
            <!--Total Check box-->
						<div class="columnCheckbox">
							<span class="uiCheckbox"><input type="checkbox" name="UIFileViewCheckBox" class="checkbox" id="UIFileViewCheckBox" onclick="eXo.ecm.UIFileView.toggleCheckboxes(this, event);"><span></span></span>
            </div>
						<!--End of Total Check Box-->
          <!--=======================================================-->
            <!--Paginator-->
              <% def pageIterator = uicomponent.getContentPageIterator();
                 int availablePage = pageIterator.getAvailablePage();
                 int currentPage = pageIterator.getCurrentPage();
                 if (availablePage > 1) {
              %>
                <div id="FileViewPageIterator" class="fileViewPageIterator pull-right">
                  <!--Begin of prev-->
                  <% if (currentPage > 1) {%>
                    <a href="javascript:void(0);" onclick="<%=pageIterator.event("ShowPage","${currentPage - 1}")%>" class="prevPageIcon" title="<%=_ctx.appRes("UIPageIterator.label.previous")%>"><%=_ctx.appRes("UIPageIterator.label.previous")%></a>
                  <%}%>
                  <!--End of prev-->                  
                  
                  <!--Begin of drop down list-->
                    <div class="btn-group">
                      <button data-toggle="dropdown" class="btn dropdown-toggle">
                        $currentPage of $availablePage  
                        <span class="caret"></span>
                      </button>
                      <ul class="dropdown-menu" style="max-height:290px;min-width:80px;overflow:auto">
                        <% for (int i = 1; i <= availablePage; i++) {%>
                          <li><a href="javascript:void(0);" onclick="<%=pageIterator.event("ShowPage", "$i")%>"><%=i%></a></li>
                        <%}%>
                      </ul>
                    </div>
                  <!--End of drop down list-->
                  <!--Begin of next-->
                  <% if (currentPage < availablePage) {%>
                    <a href="javascript:void(0);" onclick="<%=pageIterator.event("ShowPage","${currentPage + 1}")%>" class="nextPageIcon" title="<%=_ctx.appRes("UIPageIterator.label.next")%>"><%=_ctx.appRes("UIPageIterator.label.next")%></a>
                  <%}%>
                  <!--End of next-->
                </div>
              <%
                 }
              %>
            <!--End of Paginator-->
          <!--=======================================================-->
            <!--Breadcrumb sort-->
              <%
                String selectedSortType = uicomponent.getTypeSort();
                String sortOrder = uicomponent.getSortOrder();
                String typeActionLink = "";
                if (sortOrder.equals("Down")) {
                  typeActionLink = "Descending;";
                } else {
                  typeActionLink = "Ascending;";
                }
                def nameClass = "Alphabetic".equals(selectedSortType)?"active":"";
                def dateClass = "Date".equals(selectedSortType)?"active":"";
                def sizeClass = "Size".equals(selectedSortType)?"active":"";
              %>
            <!--===============DropDownBox===================-->
              <div class="btn-group pull-right">
                <button data-toggle="dropdown" class="btn dropdown-toggle">
                  <% def sortTypeName = "name";
                     if ("Date".equals(selectedSortType)) sortTypeName = "date";
                     if ("Size".equals(selectedSortType)) sortTypeName = "size";
                  %>
                  <%=_ctx.appRes("FileView.label." + sortTypeName)%>
                  <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" style="max-height:290px;min-width:80px;overflow:auto">
                    <li class="$nameClass">
                      <a href="javascript:void(0);" onclick="<%=uicomponent.event("Sort", typeActionLink + "Alphabetic")%>">
                        <%=_ctx.appRes("FileView.label.name")%>
                        <% if ("active".equals(nameClass)) {%>
                          <i class="uiIconSort<%="Down".equals(sortOrder)?"Up":"Down"%>">&nbsp;</i>
                        <%} %>
                      </a>
                    </li>
                    <li class="$dateClass">
                      <a href="javascript:void(0);" onclick="<%=uicomponent.event("Sort", typeActionLink + "Date")%>"><%=_ctx.appRes("FileView.label.date")%>
                        <% if ("active".equals(dateClass)) {%>
                          <i class="uiIconSort<%="Down".equals(sortOrder)?"Up":"Down"%>">&nbsp;</i>
                        <%} %>
                      </a>
                    </li>
                    <li class="$sizeClass">
                    <a href="javascript:void(0);" onclick="<%=uicomponent.event("Sort", typeActionLink + "Size")%>"><%=_ctx.appRes("FileView.label.size")%>
                      <% if ("active".equals(sizeClass)) {%>
                        <i class="uiIconSort<%="Down".equals(sortOrder)?"Up":"Down"%>">&nbsp;</i>
                      <%} %>
                    </a>
                  </li>
                </ul>
              </div>
            <!--===============Sort By label =================-->
						<div class="sortByLabel pull-right">
							<%=_ctx.appRes("FileView.label.sortBy")%> 
						</div>
            <!--Breadcrumb links-->
            <div class="breadcrumbLink">
							<i class="uiIconTree"></i> 
              <a class="nodeLabel" data-placement="bottom" rel="tooltip"
                 onclick="<%=uicomponent.event("ChangeNode", drivePath.toString(), new Parameter("workspaceName", uiExplorer.getDriveData().getWorkspace()))%>"
                 title="<%=uiExplorer.findFirstComponentOfType(UITreeExplorer.class).getLabel()%>">
                <%=uiExplorer.findFirstComponentOfType(UITreeExplorer.class).getLabel()%>
              </a>
              <%
              for (String nodeName : relNodePath.split("/")) {
                if (!StringUtils.isEmpty(nodeName)) {
                  if (drivePath.charAt(drivePath.length()-1) != '/') {
                    drivePath.append('/');
                  }
                  drivePath.append(nodeName);
                  def nodeWs = uiExplorer.getDriveData().getWorkspace();
                  def curNode = (javax.jcr.Node)nodeFinder.getItem(nodeWs, drivePath.toString());
                  def curTitle = org.exoplatform.services.cms.impl.Utils.getTitle(curNode);
                  %>
                    <i class="uiIconArrowRightMini uiIconLightGray"></i>
                    <a class="nodeLabel" data-placement="bottom" rel="tooltip"
                      onclick="<%=uicomponent.event("ChangeNode", drivePath.toString(), new Parameter("workspaceName", nodeWs))%>"
                      title="<%=curTitle%>">
											<%=curTitle%>
                    </a>
                  <%
                }
              }
              %>
            </div>
            <!--End of Breadcrumb links-->
          <!--=======================================================-->
            
			   <!--End of ClearFix-->			    
		    <!--=======================================================-->
			    <div style="position: relative; top: 0px; left: 0px; width: 0px; height: 0px; display: none;">
						<div class="Mask" style="position: absolute; top: 0px; left: 0px; width: 0px; height: 0px"></div>

						<ul>
  					  <li id="hiddenMoreButton" class="dropdown pull-right listHiddenActionsContainer">
    					  <a data-toggle="dropdown" class="dropdown-toggle" href="#"><%=_ctx.appRes("UIViewBar.label.more")%>  <b class="caret"></b></a>
    					  <ul class="dropdown-menu">
    					    <!-- <li><a data-toggle="tab" href="#dropdown1_4">Tab demo1</a></li> -->
    					  </ul>
  					  </li>
						</ul>
						
						<div class="JCRMoveAction" 
								 style="display: none;" 
								 request="<%=uiWorkingArea.getJCRMoveAction().event(UIWorkingArea.MOVE_NODE)%>" 
								 symlink="<%=uiWorkingArea.getCreateLinkAction().event(UIWorkingArea.CREATE_LINK)%>">
						</div>
						
            <div class="ItemContextMenu" style="position: absolute; top: 0px; left: 0px; display: none;">
              <div class="uiRightClickPopupMenu" style="display: block;">
                <ul class="dropdown-menu uiRightPopupMenuContainer" onmousedown="event.cancelBubble = true;" onkeydown="event.cancelBubble = true;">                  
                      <%
                        for(itemContext in managersMultiItemContext) {
                          action = itemContext.getUIExtensionName();
                      %>
                        <li class="menuItem" style="block">   
                          <a onclick=eXo.ecm.UIFileView.postGroupAction("<%=itemContext.event(action)%>")>  
                            <i class="uiIconEcms${action}"></i> <%=_ctx.appRes("ECMContextMenu.event." + action)%>
                          </a>
                        </li>
                      <%
                        }
                      %>
                      <li class="dropdown pull-right listHiddenActionsContainer">
                        <a data-toggle="dropdown" class="dropdown-toggle" href="#"><%=_ctx.appRes("UIViewBar.label.more")%> <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                          <!-- <li><a data-toggle="tab" href="#dropdown1_4">Tab demo1</a></li> -->
                        </ul>
                      </li>
                 </ul>  
               </div>
               <!--==================-->
               <div id="FileViewStatus" class="fileViewStatus">
                 <button type="button" class="btn pull-right" id="FileViewClearSelection" onclick="eXo.ecm.UIFileView.clearCheckboxes(event);">
                   <%=_ctx.appRes("FileView.label.ClearSelection")%>
                 </button>
                 <div class="text pull-right">
                   <%=_ctx.appRes("FileView.label.filesAreSelected")%>
                 </div>
                 <div id="FileViewItemCount" class="fileViewItemCount pull-right">
                   <span></span>
                 </div>
               </div>               
            </div><!--end of item context menu-->
            <div class="GroundContextMenu" style="position: absolute; top: 0px; left: 0px; display: none;">
            <div class="uiRightClickPopupMenu" style="display: block;">
              <ul class="dropdown-menu uiRightPopupMenuContainer" onmousedown="event.cancelBubble = true;" onkeydown="event.cancelBubble = true;">          
                <%
                      for(itemGroundContext in managersGroundContext) {
                      action = itemGroundContext.getUIExtensionName();
                %>
                <li class="menuItem" style="block">   
                  <a href="javascript:void(0);" onclick="<%=itemGroundContext.event(action)%>">   
                    <i class="uiIconEcms${action}"></i> <%=_ctx.appRes("ECMContextMenu.event." + action)%>
                  </a>
                </li>
                <%}%>
                <li class="dropdown pull-right listHiddenActionsContainer">
                  <a data-toggle="dropdown" class="dropdown-toggle" href="#"><%=_ctx.appRes("UIViewBar.label.more")%> <b class="caret"></b></a>
                  <ul class="dropdown-menu">
                    <!-- <li><a data-toggle="tab" href="#dropdown1_4">Tab demo1</a></li> -->
                  </ul>
                </li>
              </ul> 
            </div>
            <!--==================-->
            <div id="FileViewStatus" class="pull-right">
              <button type="button" class="btn pull-right" id="FileViewClearSelection" onclick="eXo.ecm.UIFileView.clearCheckboxes(event);">
                <%=_ctx.appRes("FileView.label.ClearSelection")%>
              </button>
              <div class="text pull-right">
                <%=_ctx.appRes("FileView.label.filesAreSelected")%>
              </div>
              <div id="FileViewItemCount" class="fileViewItemCount pull-right">
                <span></span>
              </div>
            </div>
        </div><!--end of ground context menu-->
      </div>
		</div><!--TitleTable-->
      <%      	
        def uiDocumentNodeList = uicomponent.getChild(UIDocumentNodeList.class);
        if (uiDocumentNodeList != null) {
          uicomponent.renderChild(uiDocumentNodeList);
        }
        %>
	      </div>
	 <% 
	 //re-initialize action
	 	uiWorkingArea.initialize(); %>
		</div>

</div>	

