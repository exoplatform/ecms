<%
  import org.exoplatform.container.PortalContainer;
  import org.exoplatform.web.application.JavascriptManager;
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.services.wcm.navigation.NavigationUtils;
  import javax.servlet.http.HttpSession;
  import org.exoplatform.services.wcm.publication.WCMComposer;
  import org.exoplatform.wcm.webui.Utils;
  import org.apache.commons.lang.StringUtils;



  def rcontext = _ctx.getRequestContext() ;
  def userName = rcontext.getRemoteUser();
  def portalName = Util.getPortalRequestContext().getPortalOwner();
  
  def selectedNodeUri = Util.getUIPortal().getSelectedUserNode().getURI();
  def session = _ctx.getRequestContext().getRequest().getSession();
  def previousURI = session.getAttribute("previousURI");
  
  session.setAttribute("previousURI", selectedNodeUri);

  String language = rcontext.getLocale().getLanguage();
  String country = rcontext.getLocale().getCountry();
  if (country != null && country.length() > 0) {
    language += "_" + country;
  }
%>
<script type="text/javascript">
  eXo.env.portal.userName='<%= userName %>';
  eXo.env.portal.language='<%= language %>'
  eXo.env.portal.selectedNodeUri = '<%= selectedNodeUri %>';
  eXo.env.portal.wcmContentTitle = '<%= _ctx.getRequestContext().getRequest().getAttribute("WCM.Content.Title") %>';
  eXo.env.portal.previousURI = '<%= previousURI %>';
  eXo.env.portal.rest = '<%= PortalContainer.getCurrentRestContextName() %>';
</script>
    
<div id="UIWorkingWorkspace" class="UIWorkingWorkspace" style="position: relative; z-index: 0;">
  <%
  try{
   uicomponent.renderChildren();
   }
  finally{
   NavigationUtils.removeNavigationAsJson(portalName, userName);
   }
  %>
</div>

<%
def jsManager = rcontext.getJavascriptManager();
if (rcontext.getRemoteUser() != null && WCMComposer.MODE_EDIT.equals(Utils.getCurrentMode())) {
   
  %>
    <script type="text/javascript">
      require(['/commons-extension/ckeditor/ckeditor.js'], function() {
        CKEDITOR.config.toolbar = "InlineEdit";
        CKEDITOR.disableAutoInline = true;
        var allElements = document.getElementsByClassName("WCMInlineEditable");
        for(var i=0; i < allElements.length; i++) {
          CKEDITOR.inline(allElements[i]);
        }        
      });
    </script>
  <%
  jsManager.require("SHARED/quick-edit", "quickEdit").addScripts("if(CKEDITOR) {for(var instanceName in CKEDITOR.instances) { var editor = CKEDITOR.instances[instanceName]; editor.on( 'focus', function( e ) {quickEdit.InlineEditor.removeHoverClass();} ); editor.on('change', function(e) {quickEdit.InlineEditor.modifyInlineContent();}); editor.on('blur', (function(tmp) { return function() {quickEdit.InlineEditor.saveInlineContent(tmp);}})(editor)); }}");  
}
%>